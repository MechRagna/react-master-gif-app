{"version":3,"sources":["components/AddCategory.js","services/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","MasterGifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","includes","toLowerCase","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","MasterGifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAsBhD,OACE,0BAAMC,SAhBa,SAACC,GACpBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GACb,OAAKA,EAAKC,SAASR,EAAWS,eAGrBF,EAFD,CAAEP,EAAWS,eAAnB,mBAAqCF,OAKzCN,EAAc,OAMd,2BAAOS,KAAK,OAAOC,MAAOX,EAAYY,SArBhB,SAACT,GACzBF,EAAcE,EAAMU,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,IAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BZ,QAVlB,kBAcdM,GAdc,4CAAH,sDCGPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,4CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdhB,mBAAS,CAAEuB,KAAM,GAAIa,SAAS,IADhB,mBACjCC,EADiC,KAC1BC,EAD0B,KAYxC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDTmBK,CAAa1B,GAA/BO,EAD+B,EAC/BA,KAAMa,EADyB,EACzBA,QAEd,OACE,oCACE,4BAAKpB,GACHoB,GAAW,yCACb,yBAAKJ,UAAU,aACZT,EAAKE,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UET3BkB,EAAe,WAAO,IAAD,EACI5C,mBAAS,IADb,mBACzB6C,EADyB,KACb9C,EADa,KAGhC,OACE,oCACE,0CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG8C,EAAWpB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCV5C8B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.9d3223f0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (inputValue.trim().length > 3) {\r\n      setCategories((cats) => {\r\n        if (!cats.includes(inputValue.toLowerCase())) {\r\n          return [inputValue.toLowerCase(), ...cats];\r\n        } else {\r\n          return cats;\r\n        }\r\n      });\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=4Z8yYrptkgEZCKbKOF88szarShF2MjZJ`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium?.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__backInUp\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifGridItem.propTypes = {};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      { loading && <p>Loading...</p> }\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../services/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","// rafc --> snippet para crear componentes funcionales\r\nimport React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const MasterGifApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Master Gif</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { MasterGifApp } from \"./MasterGifApp\";\nimport \"./index.css\";\n\nReactDOM.render(<MasterGifApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}